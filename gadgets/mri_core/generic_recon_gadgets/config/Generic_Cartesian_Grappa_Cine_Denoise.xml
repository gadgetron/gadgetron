<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <version>2</version>

    <!--
        Gadgetron generic recon chain for 2D and 3D cartesian sampling

        RealTimeCine imaging
        Triggered by slice
        Recon N is phase and S is set

        Author: Hui Xue
        National Heart, Lung and Blood Institute, National Institutes of Health
        10 Center Drive, Bethesda, MD 20814, USA
        Email: hui.xue@nih.gov
    -->

    <readers>
        <reader>
            <slot>1008</slot>
            <dll>gadgetron_mricore</dll>
            <classname>GadgetIsmrmrdAcquisitionMessageReader</classname>
        </reader>
        <reader>
            <slot>1026</slot>
            <dll>gadgetron_mricore</dll>
            <classname>GadgetIsmrmrdWaveformMessageReader</classname>
        </reader>
    </readers>

    <writers>
        <!-- writer -->
        <writer>
            <slot>1022</slot>
            <dll>gadgetron_mricore</dll>
            <classname>MRIImageWriter</classname>
        </writer>
    </writers>

    <stream>
        <!-- Noise prewhitening -->
        <gadget>
            <name>NoiseAdjust</name>
            <dll>gadgetron_mricore</dll>
            <classname>NoiseAdjustGadget</classname>
        </gadget>

        <!-- RO asymmetric echo handling -->
        <gadget>
            <name>AsymmetricEcho</name>
            <dll>gadgetron_mricore</dll>
            <classname>AsymmetricEchoAdjustROGadget</classname>
        </gadget>

        <!-- RO oversampling removal -->
        <gadget>
            <name>RemoveROOversampling</name>
            <dll>gadgetron_mricore</dll>
            <classname>RemoveROOversamplingGadget</classname>
        </gadget>

        <!-- Data accumulation and trigger gadget -->
        <gadget>
            <name>AccTrig</name>
            <dll>gadgetron_mricore</dll>
            <classname>AcquisitionAccumulateTriggerGadget</classname>
            <property>
                <name>trigger_dimension</name>
                <value>slice</value>
            </property>
            <property>
                <name>sorting_dimension</name>
                <value></value>
            </property>
        </gadget>

        <gadget>
            <name>BucketToBuffer</name>
            <dll>gadgetron_mricore</dll>
            <classname>BucketToBufferGadget</classname>
            <property>
                <name>N_dimension</name>
                <value>phase</value>
            </property>
            <property>
                <name>S_dimension</name>
                <value>set</value>
            </property>
            <property>
                <name>split_slices</name>
                <value>true</value>
            </property>
            <property>
                <name>ignore_segment</name>
                <value>true</value>
            </property>
        </gadget>

        <!-- Prep ref -->
        <gadget>
            <name>PrepRef</name>
            <dll>gadgetron_mricore</dll>
            <classname>GenericReconCartesianReferencePrepGadget</classname>

            <!-- parameters for debug and timing -->
            <property>
                <name>debug_folder</name>
                <value></value>
            </property>
            <property>
                <name>perform_timing</name>
                <value>true</value>
            </property>
            <property>
                <name>verbose</name>
                <value>true</value>
            </property>

            <!-- averaging across repetition -->
            <property>
                <name>average_all_ref_N</name>
                <value>true</value>
            </property>
            <!-- every set has its own kernels -->
            <property>
                <name>average_all_ref_S</name>
                <value>false</value>
            </property>
            <!-- whether always to prepare ref if no acceleration is used -->
            <property>
                <name>prepare_ref_always</name>
                <value>true</value>
            </property>
        </gadget>

        <!-- Coil compression -->
        <gadget>
            <name>CoilCompression</name>
            <dll>gadgetron_mricore</dll>
            <classname>GenericReconEigenChannelGadget</classname>

            <!-- parameters for debug and timing -->
            <property>
                <name>debug_folder</name>
                <value></value>
            </property>
            <property>
                <name>perform_timing</name>
                <value>true</value>
            </property>
            <property>
                <name>verbose</name>
                <value>true</value>
            </property>

            <property>
                <name>average_all_ref_N</name>
                <value>true</value>
            </property>
            <property>
                <name>average_all_ref_S</name>
                <value>true</value>
            </property>

            <!-- Up stream coil compression -->
            <property>
                <name>upstream_coil_compression</name>
                <value>true</value>
            </property>
            <property>
                <name>upstream_coil_compression_thres</name>
                <value>-1</value>
            </property>
            <property>
                <name>upstream_coil_compression_num_modesKept</name>
                <value>0</value>
            </property>
        </gadget>

        <!-- Recon -->
        <gadget>
            <name>Recon</name>
            <dll>gadgetron_mricore</dll>
            <classname>GenericReconCartesianGrappaGadget</classname>

            <!-- image series -->
            <property>
                <name>image_series</name>
                <value>0</value>
            </property>

            <!-- Coil map estimation, Inati or Inati_Iter -->
            <property>
                <name>coil_map_algorithm</name>
                <value>Inati</value>
            </property>

            <!-- Down stream coil compression -->
            <property>
                <name>downstream_coil_compression</name>
                <value>true</value>
            </property>
            <property>
                <name>downstream_coil_compression_thres</name>
                <value>0.002</value>
            </property>
            <property>
                <name>downstream_coil_compression_num_modesKept</name>
                <value>0</value>
            </property>

            <!-- parameters for debug and timing -->
            <property>
                <name>debug_folder</name>
                <value></value>
            </property>
            <property>
                <name>perform_timing</name>
                <value>true</value>
            </property>
            <property>
                <name>verbose</name>
                <value>true</value>
            </property>

            <!-- whether to send out gfactor -->
            <property>
                <name>send_out_gfactor</name>
                <value>true</value>
            </property>
        </gadget>

        <!-- Partial fourier handling -->
        <gadget>
            <name>PartialFourierHandling</name>
            <dll>gadgetron_mricore</dll>
            <classname>GenericReconPartialFourierHandlingPOCSGadget</classname>

            <!-- parameters for debug and timing -->
            <property>
                <name>debug_folder</name>
                <value></value>
            </property>
            <property>
                <name>perform_timing</name>
                <value>false</value>
            </property>
            <property>
                <name>verbose</name>
                <value>false</value>
            </property>

            <!-- if incoming images have this meta field, it will not be processed -->
            <property>
                <name>skip_processing_meta_field</name>
                <value>Skip_processing_after_recon</value>
            </property>

            <!-- Parfial fourier POCS parameters -->
            <property>
                <name>partial_fourier_POCS_iters</name>
                <value>6</value>
            </property>
            <property>
                <name>partial_fourier_POCS_thres</name>
                <value>0.01</value>
            </property>
            <property>
                <name>partial_fourier_POCS_transitBand</name>
                <value>24</value>
            </property>
            <property>
                <name>partial_fourier_POCS_transitBand_E2</name>
                <value>16</value>
            </property>
        </gadget>

        <!-- Kspace filtering -->
        <gadget>
            <name>KSpaceFilter</name>
            <dll>gadgetron_mricore</dll>
            <classname>GenericReconKSpaceFilteringGadget</classname>

            <!-- parameters for debug and timing -->
            <property>
                <name>debug_folder</name>
                <value></value>
            </property>
            <property>
                <name>perform_timing</name>
                <value>false</value>
            </property>
            <property>
                <name>verbose</name>
                <value>false</value>
            </property>

            <!-- if incoming images have this meta field, it will not be processed -->
            <property>
                <name>skip_processing_meta_field</name>
                <value>Skip_processing_after_recon</value>
            </property>

            <!-- parameters for kspace filtering -->
            <property>
                <name>filterRO</name>
                <value>Gaussian</value>
            </property>
            <property>
                <name>filterRO_sigma</name>
                <value>1.0</value>
            </property>
            <property>
                <name>filterRO_width</name>
                <value>0.15</value>
            </property>

            <property>
                <name>filterE1</name>
                <value>Gaussian</value>
            </property>
            <property>
                <name>filterE1_sigma</name>
                <value>1.0</value>
            </property>
            <property>
                <name>filterE1_width</name>
                <value>0.15</value>
            </property>

            <property>
                <name>filterE2</name>
                <value>Gaussian</value>
            </property>
            <property>
                <name>filterE2_sigma</name>
                <value>1.0</value>
            </property>
            <property>
                <name>filterE2_width</name>
                <value>0.15</value>
            </property>
        </gadget>

        <!-- FOV Adjustment -->
        <gadget>
            <name>FOVAdjustment</name>
            <dll>gadgetron_mricore</dll>
            <classname>GenericReconFieldOfViewAdjustmentGadget</classname>

            <!-- parameters for debug and timing -->
            <property>
                <name>debug_folder</name>
                <value></value>
            </property>
            <property>
                <name>perform_timing</name>
                <value>false</value>
            </property>
            <property>
                <name>verbose</name>
                <value>false</value>
            </property>
        </gadget>
        <gadget>
            <name>ArraySplit</name>
            <dll>gadgetron_mricore</dll>
            <classname>ImageArraySplitGadget</classname>
        </gadget>

        <parallelprocess workers="6">
            <purestream>
                <gadget>
                    <name>Denoiser</name>
                    <dll>gadgetron_mricore</dll>
                    <classname>DenoiseGadget</classname>
                    <property name="image_std" value="10"/>
                    <property name="search_radius" value="5"/>
                </gadget>
            </purestream>
        </parallelprocess>


        <!-- after recon processing -->
        <gadget>
            <name>ComplexToFloatAttrib</name>
            <dll>gadgetron_mricore</dll>
            <classname>ComplexToFloatGadget</classname>
        </gadget>


    </stream>
</configuration>
