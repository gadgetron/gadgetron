<?xml version="1.0" encoding="utf-8"?>
<gadgetronStreamConfiguration xsi:schemaLocation="http://gadgetron.sf.net/gadgetron gadgetron.xsd"
        xmlns="http://gadgetron.sf.net/gadgetron"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!--
        Gadgetron generic recon chain for 2D and 3D cartesian sampling

        Triggered by repetition
        Recon N is contrast and S is set

        Author: Hui Xue
        National Heart, Lung and Blood Institute, National Institutes of Health
        10 Center Drive, Bethesda, MD 20814, USA
        Email: hui.xue@nih.gov
    -->

    <!-- reader -->
    <reader><slot>1008</slot><dll>gadgetron_mricore</dll><classname>GadgetIsmrmrdAcquisitionMessageReader</classname></reader>
    <reader><slot>1026</slot><dll>gadgetron_mricore</dll><classname>GadgetIsmrmrdWaveformMessageReader</classname></reader>

    <!-- writer -->
    <writer><slot>1022</slot><dll>gadgetron_mricore</dll><classname>MRIImageWriter</classname></writer>

    <!-- Noise prewhitening -->
    <gadget><name>NoiseAdjust</name><dll>gadgetron_mricore</dll><classname>NoiseAdjustGadget</classname></gadget>

    <!-- RO asymmetric echo handling -->
    <gadget><name>AsymmetricEcho</name><dll>gadgetron_mricore</dll><classname>AsymmetricEchoAdjustROGadget</classname></gadget>

    <!-- RO oversampling removal -->
    <gadget><name>RemoveROOversampling</name><dll>gadgetron_mricore</dll><classname>RemoveROOversamplingGadget</classname></gadget>

    <!-- Data accumulation and trigger gadget -->
    <gadget>
        <name>AccTrig</name>
        <dll>gadgetron_mricore</dll>
        <classname>AcquisitionAccumulateTriggerGadget</classname>
        <property><name>trigger_dimension</name><value></value></property>
        <property><name>sorting_dimension</name><value></value></property>
    </gadget>

    <gadget>
        <name>BucketToBuffer</name>
        <dll>gadgetron_mricore</dll>
        <classname>BucketToBufferGadget</classname>
        <property><name>N_dimension</name><value>contrast</value></property>
        <property><name>S_dimension</name><value>average</value></property>
        <property><name>split_slices</name><value>false</value></property>
        <property><name>ignore_segment</name><value>true</value></property>
        <property><name>verbose</name><value>true</value></property>
    </gadget>

    <!-- Prep ref -->
    <gadget>
        <name>PrepRef</name>
        <dll>gadgetron_mricore</dll>
        <classname>GenericReconCartesianReferencePrepGadget</classname>

        <!-- parameters for debug and timing -->
        <property><name>debug_folder</name><value></value></property>
        <property><name>perform_timing</name><value>true</value></property>
        <property><name>verbose</name><value>true</value></property>

        <!-- averaging across repetition -->
        <property><name>average_all_ref_N</name><value>true</value></property>
        <!-- every set has its own kernels -->
        <property><name>average_all_ref_S</name><value>true</value></property>
        <!-- whether always to prepare ref if no acceleration is used -->
        <property><name>prepare_ref_always</name><value>true</value></property>
    </gadget>

    <!-- Coil compression -->
    <gadget>
        <name>CoilCompression</name>
        <dll>gadgetron_mricore</dll>
        <classname>GenericReconEigenChannelGadget</classname>

        <!-- parameters for debug and timing -->
        <property><name>debug_folder</name><value></value></property>
        <property><name>perform_timing</name><value>true</value></property>
        <property><name>verbose</name><value>true</value></property>

        <property><name>average_all_ref_N</name><value>true</value></property>
        <property><name>average_all_ref_S</name><value>true</value></property>

        <!-- Up stream coil compression -->
        <property><name>upstream_coil_compression</name><value>true</value></property>
        <property><name>upstream_coil_compression_thres</name><value>0.002</value></property>
        <property><name>upstream_coil_compression_num_modesKept</name><value>0</value></property>
    </gadget>

    <!-- Recon -->
    <gadget>
        <name>Recon</name>
        <dll>gadgetron_mricore</dll>
        <classname>GenericReconCartesianGrappaAIGadget</classname>

        <!-- image series -->
        <property><name>image_series</name><value>0</value></property>

        <!-- Coil map estimation, Inati or Inati_Iter -->
        <property><name>coil_map_algorithm</name><value>Inati</value></property>

        <!-- Down stream coil compression -->
        <property><name>downstream_coil_compression</name><value>true</value></property>
        <property><name>downstream_coil_compression_thres</name><value>0.01</value></property>
        <property><name>downstream_coil_compression_num_modesKept</name><value>0</value></property>

        <!-- parameters for debug and timing -->
        <property><name>debug_folder</name><value></value></property>
        <property><name>perform_timing</name><value>true</value></property>
        <property><name>verbose</name><value>true</value></property>

        <!-- whether to send out gfactor -->
        <property><name>send_out_gfactor</name><value>false</value></property>
    </gadget>

    <!-- Partial fourier handling -->
    <gadget>
        <name>PartialFourierHandling</name>
        <dll>gadgetron_mricore</dll>
        <classname>GenericReconPartialFourierHandlingFilterGadget</classname>

        <!-- parameters for debug and timing -->
        <property><name>debug_folder</name><value></value></property>
        <property><name>perform_timing</name><value>false</value></property>
        <property><name>verbose</name><value>false</value></property>

        <!-- if incoming images have this meta field, it will not be processed -->
        <property><name>skip_processing_meta_field</name><value>Skip_processing_after_recon</value></property>

        <!-- Parfial fourier handling filter parameters -->
        <property><name>partial_fourier_filter_RO_width</name><value>0.15</value></property>
        <property><name>partial_fourier_filter_E1_width</name><value>0.15</value></property>
        <property><name>partial_fourier_filter_E2_width</name><value>0.15</value></property>
        <property><name>partial_fourier_filter_densityComp</name><value>false</value></property>
    </gadget>

    <!-- Kspace filtering -->
    <gadget>
        <name>KSpaceFilter</name>
        <dll>gadgetron_mricore</dll>
        <classname>GenericReconKSpaceFilteringGadget</classname>

        <!-- parameters for debug and timing -->
        <property><name>debug_folder</name><value></value></property>
        <property><name>perform_timing</name><value>false</value></property>
        <property><name>verbose</name><value>false</value></property>

        <!-- if incoming images have this meta field, it will not be processed -->
        <property><name>skip_processing_meta_field</name><value>Skip_processing_after_recon</value></property>

        <!-- parameters for kspace filtering -->
        <property><name>filterRO</name><value>Gaussian</value></property>
        <property><name>filterRO_sigma</name><value>1.0</value></property>
        <property><name>filterRO_width</name><value>0.15</value></property>

        <property><name>filterE1</name><value>Gaussian</value></property>
        <property><name>filterE1_sigma</name><value>1.0</value></property>
        <property><name>filterE1_width</name><value>0.15</value></property>

        <property><name>filterE2</name><value>Gaussian</value></property>
        <property><name>filterE2_sigma</name><value>1.0</value></property>
        <property><name>filterE2_width</name><value>0.15</value></property>
    </gadget>

    <!-- FOV Adjustment -->
    <gadget>
        <name>FOVAdjustment</name>
        <dll>gadgetron_mricore</dll>
        <classname>GenericReconFieldOfViewAdjustmentGadget</classname>

        <!-- parameters for debug and timing -->
        <property><name>debug_folder</name><value></value></property>
        <property><name>perform_timing</name><value>false</value></property>
        <property><name>verbose</name><value>false</value></property>
    </gadget>

    <!-- Image Array Scaling -->
    <gadget>
        <name>Scaling</name>
        <dll>gadgetron_mricore</dll>
        <classname>GenericReconImageArrayScalingGadget</classname>

        <!-- parameters for debug and timing -->
        <property><name>perform_timing</name><value>false</value></property>
        <property><name>verbose</name><value>false</value></property>

        <property><name>min_intensity_value</name><value>64</value></property>
        <property><name>max_intensity_value</name><value>4095</value></property>
        <property><name>scalingFactor</name><value>10.0</value></property>
        <property><name>use_constant_scalingFactor</name><value>true</value></property>
        <property><name>auto_scaling_only_once</name><value>true</value></property>
        <property><name>scalingFactor_dedicated</name><value>100.0</value></property>
    </gadget>

    <!-- ImageArray to images -->
    <gadget>
        <name>ImageArraySplit</name>
        <dll>gadgetron_mricore</dll>
        <classname>ImageArraySplitGadget</classname>
    </gadget>

    <!-- after recon processing -->
    <gadget>
        <name>ComplexToFloatAttrib</name>
        <dll>gadgetron_mricore</dll>
        <classname>ComplexToFloatGadget</classname>
    </gadget>

    <gadget>
        <name>FloatToShortAttrib</name>
        <dll>gadgetron_mricore</dll>
        <classname>FloatToUShortGadget</classname>

        <property><name>max_intensity</name><value>32767</value></property>
        <property><name>min_intensity</name><value>0</value></property>
        <property><name>intensity_offset</name><value>0</value></property>
    </gadget>

    <gadget>
        <name>ImageFinish</name>
        <dll>gadgetron_mricore</dll>
        <classname>ImageFinishGadget</classname>
    </gadget>

</gadgetronStreamConfiguration>
