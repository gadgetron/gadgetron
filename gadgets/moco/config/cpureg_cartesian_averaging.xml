<?xml version="1.0" encoding="UTF-8"?>
<gadgetronStreamConfiguration xsi:schemaLocation="http://gadgetron.sf.net/gadgetron gadgetron.xsd"
			      xmlns="http://gadgetron.sf.net/gadgetron"
			      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <reader>
    <slot>1008</slot>
    <dll>gadgetron_mricore</dll>
    <classname>GadgetIsmrmrdAcquisitionMessageReader</classname>
  </reader>
    <reader>
        <slot>1026</slot>
        <dll>gadgetron_mricore</dll>
        <classname>GadgetIsmrmrdWaveformMessageReader</classname>
    </reader>

  <writer>
    <slot>1022</slot>
    <dll>gadgetron_mricore</dll>
    <classname>MRIImageWriter</classname>
  </writer>

  <gadget>
    <name>NoiseAdjust</name>
    <dll>gadgetron_mricore</dll>
    <classname>NoiseAdjustGadget</classname>
  </gadget>

  <gadget>
    <name>PCA</name>
    <dll>gadgetron_mricore</dll>
    <classname>PCACoilGadget</classname>
  </gadget>
  
  <gadget>
    <name>CoilReduction</name>
    <dll>gadgetron_mricore</dll>
    <classname>CoilReductionGadget</classname>
    <property><name>coils_out</name><value>16</value></property>
  </gadget>

  <gadget>
    <name>CartesianToGenericGadget</name>
    <dll>gadgetron_cartesian</dll>
    <classname>CartesianToGenericGadget</classname>
    <!-- Property 'matrix_size_as_a_multiple_of' is required for the gpu nfft 
	 to enforce the matrix size to be a multiple of the gpu warp size (32) -->
    <property><name>matrix_size_as_a_multiple_of</name><value>32</value></property>
  </gadget>

  <gadget>
    <name>gpuGenericSensePrepGadget</name>
    <dll>gadgetron_gpuparallelmri</dll>
    <classname>gpuGenericSensePrepGadget</classname>
    <property><name>deviceno</name><value>0</value></property>
    <property><name>rotations_per_reconstruction</name><value>8</value></property>
    <property><name>buffer_convolution_kernel_width</name><value>5.5</value></property>
    <property><name>buffer_convolution_oversampling_factor</name><value>1.25</value></property>
  </gadget>
  
  <gadget>
    <name>gpuCgSenseGadget</name>
    <dll>gadgetron_gpuparallelmri</dll>
    <classname>gpuCgSenseGadget</classname>
    <property><name>pass_on_undesired_data</name>  <value>true</value></property>
    <property><name>deviceno</name>                <value>0</value></property>
    <property><name>setno</name>                   <value>0</value></property>
    <property><name>number_of_iterations</name>    <value>20</value></property>
    <property><name>cg_limit</name>                <value>1e-6</value></property>
    <property><name>oversampling_factor</name>     <value>1.25</value></property>
    <property><name>kernel_width</name>            <value>5.5</value></property>
    <property><name>kappa</name>                   <value>0.05</value></property>
    <property><name>output_convergence</name><value>true</value></property>
  </gadget>

  <gadget>
    <name>PhysioInterpolationGadget</name>
    <dll>gadgetron_mricore</dll>
    <classname>PhysioInterpolationGadget</classname>
    <property><name>mode</name><value>0</value></property>
    <property><name>phase</name><value>30</value></property>
  </gadget>

  <gadget>
    <name>Extract</name>
    <dll>gadgetron_mricore</dll>
    <classname>ExtractGadget</classname>
  </gadget>

  <gadget>
    <name>cpuRegistrationAveragingGadget2D</name>
    <dll>gadgetron_moco</dll>
    <classname>cpuRegistrationAveragingGadget2D</classname>
    <property><name>alpha</name><value>0.05</value></property>
    <property><name>beta</name><value>1.0</value></property>
    <property><name>num_multiresolution_levels</name><value>3</value></property>
    <property><name>output_convergence</name><value>true</value></property>
    <property><name>phase</name><value>phase@PhysioInterpolationGadget</value></property>
  </gadget>
  
  <!--
      <gadget>
      <name>ImageFinishFloat</name>
      <dll>gadgetron_mricore</dll>
      <classname>ImageFinishGadgetFLOAT</classname>
      </gadget>    
  -->

  <gadget>
    <name>AutoScale</name>
    <dll>gadgetron_mricore</dll>
    <classname>AutoScaleGadget</classname>
  </gadget>

  <gadget>
    <name>FloatToShort</name>
    <dll>gadgetron_mricore</dll>
    <classname>FloatToUShortGadget</classname>
  </gadget>

  <gadget>
    <name>ImageFinish</name>
    <dll>gadgetron_mricore</dll>
    <classname>ImageFinishGadget</classname>
  </gadget>
  
</gadgetronStreamConfiguration>
