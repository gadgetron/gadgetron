variables:
  AzureConnection: 'BiomedicalImaging-NonProd(87d8acb3-5176-4651-b457-6ab9cefd8e3d)'
  AcrConnection: 'gadgetron-acr'
  AcrRegistryAddress: 'gadgetron.azurecr.io'
  AcrRegistryName: 'gadgetronbuild'
  ContainerRegistry: 'ghcr.io/gadgetron/gadgetron'

pool: gadgetron-gpu-nodes

# Trigger when merging to master
trigger:
- master

# Trigger for PRs that merge to master
pr:
- master

jobs:
- job: buildAndPush
  displayName: "Build and Push"
  strategy:
    matrix:
      ubuntu2004:
        imageName: gadgetron_ubuntu_2004
        dockerFile: docker/ubuntu_2004.Dockerfile
      ubuntu2004CUDA:
        imageName: gadgetron_ubuntu_2004_cuda11_cudnn8
        dockerFile: docker/ubuntu_2004_cuda11_cudnn.Dockerfile
  steps:
  - template: ./build-jobs/docker-build-push-acr.yaml
    parameters:
      acrconnection: $(AcrConnection)
      dockerfile: $(dockerFile)
      imageName: $(imageName)
      containerregistry: $(AcrRegistryName)

- job: Tests
  displayName: "Unit and Integration tests"
  dependsOn:
  - buildAndPush
  strategy:
    matrix:
      ubuntu2004:
        imageName: gadgetron_ubuntu_2004
      ubuntu2004CUDA:
        imageName: gadgetron_ubuntu_2004_cuda11_cudnn8
  steps:
  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: $(AcrConnection)
  - script: |
        set -e
        fullImageName="$(AcrRegistryAddress)/$(AcrRegistryName)/$(imageName):$(build.BuildNumber)"
        docker run --gpus all --rm $fullImageName /opt/code/gadgetron/build/test/test_all
    displayName: "Run unit tests"
  - script: |
        set -e
        mkdir -p testdata
        fullImageName="$(AcrRegistryAddress)/$(AcrRegistryName)/$(imageName):$(build.BuildNumber)"
        docker run -v $(pwd)/testdata:/opt/code/gadgetron/test/integration/data --rm $fullImageName /bin/bash -c "cd /opt/code/gadgetron/test/integration/ && ./get_data.py"
    displayName: "Get test data"
  - script: |
        set -e
        fullImageName="$(AcrRegistryAddress)/$(AcrRegistryName)/$(imageName):$(build.BuildNumber)"
        docker run --gpus all -v $(pwd)/testdata:/opt/code/gadgetron/test/integration/data --rm $fullImageName /bin/bash -c "cd /opt/code/gadgetron/test/integration/ && ./run_tests.py cases/*"
    displayName: "Run integration tests"

- job:
  displayName: "Tag latest images"
  dependsOn:
  - Tests
  condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
  strategy:
    matrix:
      ubuntu2004:
        imageName: gadgetron_ubuntu_2004
      ubuntu2004CUDA:
        imageName: gadgetron_ubuntu_2004_cuda11_cudnn8
  steps:
  - template: ./build-jobs/tag-docker-image.yaml
    parameters:
        acrconnection: $(AcrConnection)
        azureconnection: $(AzureConnection)
        imagename: $(AcrRegistryName)/$(imageName)
        imagetag: $(build.BuildNumber)
        newimagetag: 'latest'
        acrregistry: $(AcrRegistryAddress)
        containerregistry: $(ContainerRegistry)
